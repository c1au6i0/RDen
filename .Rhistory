panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 extraction",
y = "date2 extraction")
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
p1 <- lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
lott_poly[,"lott_colour"] <- lott_poly %>%
unite("colour", matches("^(j|m)"), sep = "", remove = FALSE) %>% # we unite jackpot and multiplier
mutate(colour = as.numeric(colour)) %>%
mutate(red = str_sub(colour, 1, 3 ),  # we decompose the numbers and we make some rgb colors
green = str_sub(colour, 3, 5),
blue = str_sub(colour, 6 , 8)) %>%
mutate_at(.vars = (ncol(.) - 4) : ncol(.), as.numeric) %>%
{
.[is.na(.)] <- 0
rgb(.$red, .$green, .$blue, maxColorValue = 1000)
}
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
anim <- ggplot(mtcars, aes(mpg, disp)) +
transition_states(gear, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
## Not run:
# Default uses linear easing
animate(anim)
# Change all to 'cubic-in-out' for a smoother appearance
anim1 <- anim +
ease_aes('cubic-in-out')
## Not run:
animate(anim1)
lott_b
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('cubic-in-out')
# We'll start with a static plot
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point()
anim <- p +
transition_states(Species,
transition_length = 2,
state_length = 1)
anim +
ease_aes(y = 'bounce-out') # Sets special ease for y aesthetic
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE, transition_length = 2,
state_length = 1)) +
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE, transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
library(tidyverse)
library(rvest)
library(janitor)
library(jcolors)
library(lubridate)
library(gapminder)
library(gganimate)
library(glue)
lott <- readRDS("/Users/heverz/Documents/R_projects/rden/static/data/data_post6/lott.RDS")
# saveRDS(lott, "/Users/heverz/Documents/R_projects/rden/static/data/data_post6/lott.RDS")
xy_b <- lott %>%
gather(point, value, x1:x6) %>%
mutate(point2 = case_when(
str_detect(point, "(1|2|3)") ~ "x",
str_detect(point, "(4|5|6)") ~ "y"),
id = case_when(
str_detect(point, "(1|4)") ~ 1,
str_detect(point, "(2|5)") ~ 2,
str_detect(point, "(3|6)") ~ 3
)
) %>%
split.data.frame(.$point2)  #we split the dataframe based on xy
names(xy_b) <- c("x", "y")
lott_b <- xy_b$x %>%    # no we join them based on their biweek ID
select(-c(point, point2, jackpot, megaplier)) %>%
inner_join(xy_b$y, by = c("date", "id")) %>%
select(order(colnames(.))) %>%
select(-starts_with("p"))
lott_b %>%
summary()
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
# labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
#     x = "numbers (1st to 3d)",
#     y = "numbers (4th to 6th)",
#     color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
# labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
#     x = "numbers (1st to 3d)",
#     y = "numbers (4th to 6th)",
#     color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date) +
ease_aes(y = 'elastic-out')
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers") +
# transition_manual(all_dates, cumulative = TRUE)
transition_states(all_dates) +
easy_aes(y = "bounce-out") +
exit_shrink()
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers") +
# transition_manual(all_dates, cumulative = TRUE)
transition_states(all_dates) +
ease_aes(y = "bounce-out") +
exit_shrink()
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
# labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
#     x = "date1 numbers",
#     y = "date2 numbers") +
# transition_manual(all_dates, cumulative = TRUE)
transition_states(all_dates) +
ease_aes(y = "bounce-out") +
exit_shrink()
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
# labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
#     x = "date1 numbers",
#     y = "date2 numbers") +
# transition_manual(all_dates, cumulative = TRUE)
transition_states(all_dates, transition_length = 2,
state_length = 1) +
ease_aes(y = "bounce-out") +
exit_shrink()
lott
min(lott$date)
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers") +
transition_manual(all_dates, cumulative = TRUE)
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(1)
options(blogdown.generator.server = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
options(blogdown.generator.server = TRUE)
blogdown:::serve_site()
options(blogdown.generator.server = TRUE)
blogdown:::serve_site()
library(tidyverse)
min(lott$date)
library(tidyverse)
library(rvest)
library(janitor)
library(jcolors)
library(lubridate)
library(gapminder)
library(gganimate)
library(glue)
lott <- readRDS("/Users/heverz/Documents/R_projects/rden/static/data/data_post6/lott.RDS")
# saveRDS(lott, "/Users/heverz/Documents/R_projects/rden/static/data/data_post6/lott.RDS")
extract_table <- function(url) {
# extract values
url  %>%
read_html() %>%
html_nodes(".text td") %>%
html_text() %>%  # is a vector  that needs to be cleaned up
{
.[. != ""] %>% # we remove empty cells
.[10:(length(.)-6)] # and some first values that are junk
}  %>%
{
tibble(
date = as.Date(str_subset(., "^[:alpha:]"),format = "%A, %B %d, %Y"),
jackpot = str_subset(., "^\\$"),
numbers = str_subset(., "^[:digit:]{2}\\s"),
megaplier = as.numeric(.[str_count(.) == 1])
)
} %>%
# all the the 6 extracted numbers are in one single cell:
# we need to separate them
separate(numbers, paste0("x", 1:6)) %>%
mutate_at(vars(starts_with("x")), as.numeric) %>%  #make them as numeric
mutate(jackpot = as.numeric(str_extract(jackpot,  "[0-9]{1,}"))) # remove word million from jackpot cells
}
pages <- 1:62 # pages >63  do not have a megaplier
urls <- paste0("https://www.usamega.com/mega-millions-history.asp?p=", pages)
lott <- map_dfr(urls, extract_table)
glimpse(lott)
glimpse(lott)
glimpse(lott_b)
