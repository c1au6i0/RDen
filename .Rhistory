scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
labs(x = "numbers (1st to 3d)", y = "numbers (4th to 5th)", color = "jackpot\n(millions)")   +
lab(title = 'Date: {current_frame}') +
transition_manual(date, cumulative = TRUE) +
ease_aes()
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black"))
labs(x = "numbers (1st to 3d)", y = "numbers (4th to 5th)", color = "jackpot\n(millions)")   +
labs(title = 'Date: {current_frame}') +
transition_manual(date, cumulative = TRUE) +
ease_aes()
labs(x = "numbers (1st to 3d)", y = "numbers (4th to 5th)", color = "jackpot\n(millions)")   +
labs(title = 'Data: {current_frame}') +
transition_manual(date, cumulative = TRUE) +
ease_aes()
labs(title = 'Data: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 5th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes()
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'Data: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 5th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes()
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'Megamillions\nDate: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 5th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes()
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\date results: {current_frame}',
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 5th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
p1 <- animate(p1)
p1 <- lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
theme_bw() +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 5th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
p1 <- animate(p1)
anim_save("p1.gif", p1)
# Polygons
# we need to have 6 values for the x and 6 for the y so we are going to take 2 extractions of numbers
xy_p <- lott %>%
mutate(biweek = rep(1:(nrow(.)/2), each = 2),  # we create a biweek ID (same ID for points of the same shape)
xy = rep(c("x", "y"), nrow(.)/2))  %>%  # xy, one extraction will be the x coordinate and one the y
gather(point, value,x1:x6) %>%  # wide to long
split.data.frame(.$xy)  #we split the dataframe based on xy
names(xy) <- c("x", "y")
# lott_cl <-
lott_poly <- xy_p$x %>%    # no we join them based on their biweek ID
select(-c(xy)) %>%
inner_join(xy_p$y, by = c("biweek", "point")) %>%
select(order(colnames(.)))
# and voil√†
glimpse(lott_poly)
lott_poly[,"lott_colour"] <- lott_poly %>%
unite("colour", matches("^(j|m)"), sep = "", remove = FALSE) %>% # we unite jackpot and multiplier
mutate(colour = as.numeric(colour)) %>%
mutate(red = str_sub(colour, 1, 3 ),  # we decompose the numbers and we make some rgb colors
green = str_sub(colour, 3, 5),
blue = str_sub(colour, 6 , 8)) %>%
mutate_at(.vars = (ncol(.) - 4) : ncol(.), as.numeric) %>%
{
.[is.na(.)] <- 0
rgb(.$red, .$green, .$blue, maxColorValue = 1000)
}
lott_poly %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(biweek, cumulative = TRUE) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "lottery extraction",
y = "lottery extraction",
color = "jackpot\n(millions)")
lott_poly
install.packages("glue")
library(glue)
lott_poly %>%
mutate(all_dates = glue(date.x, date.y, sep = " & ")) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "lottery extraction",
y = "lottery extraction")
lott_poly %>%
mutate(all_dates = glue(date.x, date.y, sep = " & "))
lott_poly %>%
mutate(all_dates = glue(date.x, " & ", date.y))
lott_poly %>%
mutate(all_dates = glue(date.x, " \\& ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "lottery extraction",
y = "lottery extraction")
lott_poly %>%
mutate(all_dates = glue(date.x, " \\& ", date.y))
lott_poly %>%
mutate(all_dates = paste0(date.x, " \\& ", date.y))
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y))
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "lottery extraction",
y = "lottery extraction")
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 extraction",
y = "date2 extraction")
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
p1 <- lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_b %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
lott_poly[,"lott_colour"] <- lott_poly %>%
unite("colour", matches("^(j|m)"), sep = "", remove = FALSE) %>% # we unite jackpot and multiplier
mutate(colour = as.numeric(colour)) %>%
mutate(red = str_sub(colour, 1, 3 ),  # we decompose the numbers and we make some rgb colors
green = str_sub(colour, 3, 5),
blue = str_sub(colour, 6 , 8)) %>%
mutate_at(.vars = (ncol(.) - 4) : ncol(.), as.numeric) %>%
{
.[is.na(.)] <- 0
rgb(.$red, .$green, .$blue, maxColorValue = 1000)
}
lott_poly %>%
mutate(all_dates = paste0(date.x, " & ", date.y)) %>%
ggplot(aes(value.x, value.y, fill = lott_colour)) +
geom_polygon() +
scale_fill_identity() +
transition_manual(all_dates, cumulative = TRUE) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "date1 numbers",
y = "date2 numbers")
anim <- ggplot(mtcars, aes(mpg, disp)) +
transition_states(gear, transition_length = 2, state_length = 1) +
enter_fade() +
exit_fade()
## Not run:
# Default uses linear easing
animate(anim)
# Change all to 'cubic-in-out' for a smoother appearance
anim1 <- anim +
ease_aes('cubic-in-out')
## Not run:
animate(anim1)
lott_b
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('bounce-in')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE) +
ease_aes('cubic-in-out')
# We'll start with a static plot
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point()
anim <- p +
transition_states(Species,
transition_length = 2,
state_length = 1)
anim +
ease_aes(y = 'bounce-out') # Sets special ease for y aesthetic
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE, transition_length = 2,
state_length = 1)) +
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
transition_manual(date, cumulative = TRUE, transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
# geom_line(size = 1) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
lott_b %>%
head(9) %>%
ggplot(aes(value.x, value.y, color = jackpot, size = megaplier)) +
geom_point(alpha = 0.7) +
scale_size(range = c(1, 10), trans = "exp") +
scale_color_jcolors_contin(palette = "rainbow") +
scale_x_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
scale_y_continuous(limits= c(0, 80), breaks = seq(0, 80, 10), labels = seq(0, 80, 10)) +
coord_fixed(ratio = 1) +
theme_bw() +
theme(legend.title.align = 0.5,
panel.grid.minor  = element_blank(),
panel.grid.major = element_blank(),
legend.background = element_blank(),
legend.box.background = element_rect(colour = "black")) +
labs(title = 'MEGAMILLIONS\ndate results: {current_frame}',
x = "numbers (1st to 3d)",
y = "numbers (4th to 6th)",
color = "jackpot\n(millions)") +
# transition_manual(date, cumulative = TRUE) +
transition_states(date,
transition_length = 2,
state_length = 1) +
ease_aes(y = 'bounce-out')
